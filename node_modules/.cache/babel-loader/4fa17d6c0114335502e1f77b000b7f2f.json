{"ast":null,"code":"var _jsxFileName = \"/Users/JohnD/Desktop/tradingview/src/components/Backtest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport styled from \"styled-components\";\nimport TradeList from './TradeList';\nimport { GlobalContext } from '../context/GlobalState'; //import { pairs } from 'd3';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CSS = styled.div`\n  background: #3d3d4a;\n  color: #898996;\n  display:flex;\n\n  padding: 1%;\n  margin: 0% 0% 1% 0%;\n\n  .settings{\n    font-size: 16px;\n    padding: 1%;\n    width: 25%;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\n  }\n  .results-overview{\n    padding: 1%;\n    width: 24%;\n    font-size: 16px;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\n    margin: 0% 1%;\n  }\n  .list-of-trades{\n    padding:1%;\n    width: 50%;\n    font-size: 16px;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\n\n  }\n\n\n  h4{\n    font-size: 180%;\n    border-bottom: 4px solid #898996;\n  }\n\n\n\n  /* left card CSS begin */\n  .input-flex{\n    display:flex;\n    border: none;\n    border-bottom: 2px solid #6464a3;\n    background: transparent;//#eff1f2;\n    color: #dedfe4;\n    width: 75%;\n    height: 2rem;\n    font-size: 16px;\n    padding-left: 0.5rem;\n    padding-top: 0.325rem;\n    padding-bottom: 0.325rem;\n    margin-bottom: 0.425rem;\n    \n    &:focus, &:hover{\n      outline: none;\n      color: #373641;\n      ::placeholder{\n        color: #a5a5b0;\n      }\n      background: #dedfe4;\n    }\n    ::placeholder{\n      color: #dedfe4;\n    }\n  }\n\n  .input-inline{\n    display:inline;\n    border: none;\n    border-bottom: 2px solid #6464a3;\n    background: transparent;//#eff1f2;\n    color: #dedfe4;\n    width:10%;\n    height: 2rem;\n    font-size: 16px;\n    padding-left: 0.5rem;\n    padding-top: 0.325rem;\n    padding-bottom: 0.325rem;\n    margin-bottom: 0.425rem;\n    \n    &:focus, &:hover{\n      outline: none;\n      color: #373641;\n      ::placeholder{\n        color: #a5a5b0;\n      }\n      background: #dedfe4;\n    }\n    ::placeholder{\n      color: #dedfe4;\n    }\n  }\n\n  .input-label{\n    color: #898996;\n    font-size: 14px;\n  }\n\n  .input-label-sub{\n    color: #898996;\n    font-style: italic;\n    font-size: 80%;\n    padding-left: 5%;\n    margin-bottom: 2%;\n  }\n\n  .input-select {\n    display:flex;\n    width: 75%;\n    color: #dedfe4;\n    border: none;\n    border-bottom: 2px solid #6464a3;\n    background: transparent;\n    height: 2rem;\n    font-size: 16px;\n    padding-left: 0.5rem;\n    margin-bottom: 0.425rem;\n\n    &:focus, &:hover{\n      outline: none;\n      color: #373641;\n      background: #dedfe4;\n    }\n  }\n\n\n  .calc-button {\n    display: block;\n    cursor: pointer;\n    outline: none;\n    border: none;\n    background-color: #dedfe4;\n    width: 200px;\n    height: 35px;\n    border-radius: 30px;\n    font-size: 18px;\n    font-weight: 600;\n    color: #373641;\n    background-size: 100% 100%;\n    box-shadow: 0 0 0 1px black inset;\n    margin: 1%;\n    margin-top: 3%;\n\n    @media only screen and (max-width: 968px) {\n      width: auto;\n    }\n  }\n  \n  .calc-button:hover {\n    background-image: linear-gradient(\n      145deg,\n      transparent 10%,\n      #89d47f 10% 20%,\n      transparent 20% 30%,\n      #89d47f 30% 40%,\n      transparent 40% 50%,\n      #89d47f 50% 60%,\n      transparent 60% 70%,\n      #89d47f 70% 80%,\n      transparent 80% 90%,\n      #89d47f 90% 100%\n    );\n    animation: background 6s linear infinite;\n\n\n    @media only screen and (max-width: 968px) {\n      width: auto;\n      color: #52515c;\n      background-color: #ebebeb;\n      background-image: none;\n    }\n  }\n\n  .del-button {\n    display: block;\n    cursor: pointer;\n    outline: none;\n    border: none;\n    background-color: #dedfe4;\n    width: 200px;\n    height: 35px;\n    border-radius: 30px;\n    font-size: 18px;\n    font-weight: 600;\n    color: #373641;\n    background-size: 100% 100%;\n    box-shadow: 0 0 0 1px black inset;\n    margin: 1%;\n    \n    margin-top: 3%;@media only screen and (max-width: 968px) {\n      width: auto;\n    }\n  }\n  \n  .del-button:hover {\n    background-image: linear-gradient(\n      145deg,\n      transparent 10%,\n      #d4847f 10% 20%,\n      transparent 20% 30%,\n      #d4847f 30% 40%,\n      transparent 40% 50%,\n      #d4847f 50% 60%,\n      transparent 60% 70%,\n      #d4847f 70% 80%,\n      transparent 80% 90%,\n      #d4847f 90% 100%\n    );\n    animation: background 6s linear infinite;\n    @media only screen and (max-width: 968px) {\n      width: auto;\n      color: #52515c;\n      background-color: #ebebeb;\n      background-image: none;\n    }\n  }\n  \n  @keyframes background {\n    0% {\n      background-position: 0 0;\n    }\n    100% {\n      background-position: 400px 0;\n    }\n  }\n  /* left card CSS end */\n  /* middle card CSS begin */\n  .result-item{\n    border-bottom: 2px solid #6464a3;\n    height: auto;\n    margin-bottom: 4%;\n    padding-bottom: 1%;\n  }\n  .result-title{\n    text-align: left;\n    color: #898996;\n    font-size: 14px;\n    width: 50%;\n  }\n  .result-output{\n    text-align: right;\n    color: #dedfe4;\n    font-size: 16px;\n    width: 50%;\n  }\n\n  .conclusion-title{\n    text-align: left;\n    color: #898996;\n    font-size: 14px;\n    width: 35%;\n  }\n  .backtest-won{\n    text-align: right;\n    font-size: 16px;\n    width: 65%;\n\n    color: #81dfc4;\n  }\n\n  .backtest-lost{\n    text-align: right;\n    font-size: 16px;\n    width: 65%;\n\n    color: #d75b6d;\n  }\n\n  .backtest-null{\n    text-align: right;\n    font-size: 16px;\n    width: 65%;\n\n    color: #dedfe4;\n  }\n  /* middle card CSS end */\n  /* right card CSS begin */\n  .trades-scroll{\n    font-size: 12px;\n    background-color: #373641;\n    padding: 1% 3%;\n    width:auto;\n    overflow-y:auto;\n    overflow-x:clip;\n    height: 750px;\n  }\n\n  /* right card CSS end */\n\n  /* Tooltip begin */\n  [data-tooltip] {\n    position: relative;\n    z-index: 10;\n  }\n\n  /* Positioning and visibility settings of the tooltip */\n  [data-tooltip]:before,\n  [data-tooltip]:after {\n    position: absolute;\n    visibility: hidden;\n    opacity: 0;\n    left: 50%;\n    bottom: calc(100% + 5px); /* 5px is the size of the arrow */\n    pointer-events: none;\n    transition: 0.2s;\n    will-change: transform;\n  }\n\n  /* The actual tooltip with a dynamic width */\n  [data-tooltip]:before {\n    content: attr(data-tooltip);\n    padding: 10px 18px;\n    min-width: 50px;\n    max-width: 300px;\n    width: max-content;\n    width: -moz-max-content;\n    border-radius: 6px;\n    font-size: 14px;\n    background-color: rgba(59, 72, 80, 0.9);\n    background-image: linear-gradient(30deg,\n      rgba(59, 72, 80, 0.44),\n      rgba(59, 68, 75, 0.44),\n      rgba(60, 82, 88, 0.44));\n    box-shadow: 0px 0px 24px rgba(0, 0, 0, 0.2);\n    color: #fff;\n    text-align: center;\n    white-space: pre-wrap;\n    transform: translate(-50%, -5px) scale(0.5);\n  }\n\n  /* Tooltip arrow */\n  [data-tooltip]:after {\n    content: '';\n    border-style: solid;\n    border-width: 5px 5px 0px 5px; /* CSS triangle */\n    border-color: rgba(55, 64, 70, 0.9) transparent transparent transparent;\n    transition-duration: 0s; /* If the mouse leaves the element, \n                                the transition effects for the \n                                tooltip arrow are \"turned off\" */\n    transform-origin: top;   /* Orientation setting for the\n                                slide-down effect */\n    transform: translateX(-50%) scaleY(0);\n  }\n\n  /* Tooltip becomes visible at hover */\n  [data-tooltip]:hover:before,\n  [data-tooltip]:hover:after {\n    visibility: visible;\n    opacity: 1;\n  }\n  /* Scales from 0.5 to 1 -> grow effect */\n  [data-tooltip]:hover:before {\n    transition-delay: 0.3s;\n    transform: translate(-50%, -5px) scale(1);\n  }\n  /* \n    Arrow slide down effect only on mouseenter (NOT on mouseleave)\n  */\n  [data-tooltip]:hover:after {\n    transition-delay: 0.5s; /* Starting after the grow effect */\n    transition-duration: 0.2s;\n    transform: translateX(-50%) scaleY(1);\n  }\n\n  /* LEFT */\n  /* Tooltip + arrow */\n  [data-tooltip-location=\"left\"]:before,\n  [data-tooltip-location=\"left\"]:after {\n    left: auto;\n    right: calc(100% + 5px);\n    bottom: 50%;\n  }\n\n  /* Tooltip */\n  [data-tooltip-location=\"left\"]:before {\n    transform: translate(-5px, 50%) scale(0.5);\n  }\n  [data-tooltip-location=\"left\"]:hover:before {\n    transform: translate(-5px, 50%) scale(1);\n  }\n\n  /* Arrow */\n  [data-tooltip-location=\"left\"]:after {\n    border-width: 5px 0px 5px 5px;\n    border-color: transparent transparent transparent rgba(55, 64, 70, 0.9);\n    transform-origin: left;\n    transform: translateY(50%) scaleX(0);\n  }\n  [data-tooltip-location=\"left\"]:hover:after {\n    transform: translateY(50%) scaleX(1);\n  }\n\n\n\n  /* RIGHT */\n  [data-tooltip-location=\"right\"]:before,\n  [data-tooltip-location=\"right\"]:after {\n    left: calc(100% + 5px);\n    bottom: 50%;\n  }\n\n  [data-tooltip-location=\"right\"]:before {\n    transform: translate(5px, 50%) scale(0.5);\n  }\n  [data-tooltip-location=\"right\"]:hover:before {\n    transform: translate(5px, 50%) scale(1);\n  }\n\n  [data-tooltip-location=\"right\"]:after {\n    border-width: 5px 5px 5px 0px;\n    border-color: transparent rgba(55, 64, 70, 0.9) transparent transparent;\n    transform-origin: right;\n    transform: translateY(50%) scaleX(0);\n  }\n  [data-tooltip-location=\"right\"]:hover:after {\n    transform: translateY(50%) scaleX(1);\n  }\n\n\n\n  /* BOTTOM */\n  [data-tooltip-location=\"bottom\"]:before,\n  [data-tooltip-location=\"bottom\"]:after {\n    top: calc(100% + 5px);\n    bottom: auto;\n  }\n\n  [data-tooltip-location=\"bottom\"]:before {\n    transform: translate(-50%, 5px) scale(0.5);\n  }\n  [data-tooltip-location=\"bottom\"]:hover:before {\n    transform: translate(-50%, 5px) scale(1);\n  }\n\n  [data-tooltip-location=\"bottom\"]:after {\n    border-width: 0px 5px 5px 5px;\n    border-color: transparent transparent rgba(55, 64, 70, 0.9) transparent;\n    transform-origin: bottom;\n  }\n\n  /* End of tooltips */\n\n`;\n_c = CSS;\nexport const Backtest = _ref => {\n  _s();\n\n  let {\n    backtest\n  } = _ref;\n\n  const defaultTimePeriod = () => {\n    switch (backtest.indicator) {\n      case 'RSI':\n        return 14;\n\n      case 'EMA':\n        return 9;\n\n      case 'SMA':\n        return 9;\n\n      case 'BB':\n        return 20;\n\n      default:\n        return 24;\n    }\n  };\n\n  const defaultBuyStrat = () => {\n    switch (backtest.indicator) {\n      case 'RSI':\n        return 30;\n\n      case 'EMA':\n        return -3;\n\n      case 'SMA':\n        return -3;\n\n      case 'BB':\n        return -3;\n\n      default:\n        return -3;\n    }\n  }; // Returns today date in YYYY-MM-DD formate\n\n\n  const getTodayDate = () => {\n    return new Date().toISOString().slice(0, 10);\n  }; // Returns 100 years ago today date in YYYY-MM-DD formate\n\n\n  const getOldDate = () => {\n    let myDate = new Date(new Date().setFullYear(new Date().getFullYear() - 100));\n    return myDate.toISOString().slice(0, 10);\n  }; // Converts YYYY-MM-DD to DD/MM/YYYY\n\n\n  const formatDate = uglyDate => {\n    var array = (uglyDate || '').toString().split(/-/g);\n    array.push(array.shift());\n    return array.join('/') || null;\n  };\n\n  const [tradeListData, setTradeListData] = useState([]);\n  const [seriesType, setSeriesType] = useState('1. open');\n  const [timePeriod, setTimePeriod] = useState(defaultTimePeriod());\n  const [stdDeviation, setStdDeviation] = useState(2);\n  const [startDate, setStartDate] = useState(getOldDate());\n  const [endDate, setEndDate] = useState(getTodayDate());\n  const [maxBags, setMaxBags] = useState(15);\n  const [initalBalance, setInitialBalance] = useState(3000);\n  const [initalBuyType, setInitalBuyType] = useState('usd');\n  const [initalBuyAmount, setInitalBuyAmount] = useState(100);\n  const [buyStrategyValue, setBuyStrategyValue] = useState(defaultBuyStrat());\n  const [buyStrategyType, setBuyStrategyType] = useState('Real Middle Band'); // Used for Bollinger upper/middle/lower\n\n  const [sellStrategyValue, setSellStrategyValue] = useState(1);\n  const {\n    deleteBacktest,\n    current_symbol,\n    cache_TSDA,\n    cache_TSDA_function\n  } = useContext(GlobalContext); // Used for JSX dropdown items\n\n  const dropdownItems = items => {\n    return items.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item.value,\n      children: item.name\n    }, item.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 30\n    }, this));\n  }; // Calculates USD value for creating a bag\n\n\n  function calcInitalBuy(buyType, buyAmount, currentBalance, curStockPrice) {\n    switch (buyType) {\n      case \"numStocks\":\n        return curStockPrice * buyAmount;\n\n      case \"percent\":\n        return currentBalance * (buyAmount / 100.00);\n\n      default:\n        // case \"usd\":\n        return buyAmount;\n    }\n  } // Function to return true/false for buy condition, given price and indicator values\n\n\n  function isBuyConditionMet(buyStrategyValue, curStockPrice, curIndicatorValue) {\n    switch (backtest.indicator) {\n      case \"RSI\":\n        return curIndicatorValue < buyStrategyValue;\n\n      default:\n        // case EMA, SMA, BB (all cases where indicator is a price of stock)\n        console.log(`price is ${curStockPrice}, indicator is ${curIndicatorValue}, buy Price`, curIndicatorValue * ((100.0 + buyStrategyValue) / 100.0), curStockPrice <= curIndicatorValue * ((100.0 + buyStrategyValue) / 100.0));\n        return curStockPrice <= curIndicatorValue * ((100.0 + buyStrategyValue) / 100.0);\n    }\n  } // Returns JSON name of element for indicator item\n\n\n  function getIndicatorJSON() {\n    switch (backtest.indicator) {\n      case \"BBANDS\":\n        return buyStrategyType;\n\n      default:\n        return backtest.indicator;\n    }\n  } // Finalizes trade, storing buy/sell data into backtest.tradeListData\n\n\n  function finalizeTrade(myBag, buyDate, sellDate, candleCountSell, sellPrice, curIndicatorValue, numShares) {\n    const percentChange = sellPrice / myBag[\"buy-price\"];\n    const profitUSD = +(percentChange - 1) * myBag[\"volume-USD\"];\n    const candleLength = +candleCountSell - myBag[\"candle-count-buy\"]; // Push on individual trade data\n\n    backtest.tradeListData.push({\n      buyDate,\n      sellDate,\n      buyPrice: myBag[\"buy-price\"],\n      sellPrice,\n      numShares,\n      profitPercent: +percentChange - 1,\n      profitUSD,\n      candleLength,\n      indicatorAtSell: curIndicatorValue,\n      indicatorAtBuy: myBag[\"indicator-at-buy\"]\n    }); // Update results Overview data\n\n    backtest.numTrades++;\n    backtest.profitUSD += profitUSD;\n    backtest.netBars += candleLength;\n    backtest.netSellVolume += sellPrice * numShares; //console.log(\"finalizeTrade called, % change:\", percentChange, buyDate, sellDate);\n  } // Runs user specified backtest algorithms and prepares outputs/trades to display\n\n\n  async function runBacktests(paperAPICall, pairSettings) {\n    let stockPriceData;\n    let stockIndicatorData;\n    let response; // Ensure user has selected a stock\n\n    if (!current_symbol) {\n      alert(\"Please select a stock to test your strategy on.\");\n      return;\n    } // Ensure API json for cache_TSDA exists\n\n\n    if (!cache_TSDA['Meta Data']) {\n      response = await fetch(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${current_symbol}&outputsize=full&apikey=CQ5JZQYM4DG0OODA`);\n      stockPriceData = await response.json();\n      cache_TSDA_function(stockPriceData); // Stop if MAX API\n\n      if (stockPriceData.Note) return;\n    } else {\n      stockPriceData = cache_TSDA;\n    } // Make API call for stockIndicatorData\n\n\n    let optionalParameters;\n\n    switch (backtest.indicator) {\n      case 'BBANDS':\n        optionalParameters = `&nbdevup=${pairSettings.stdDeviation}&nbdevdn=${pairSettings.stdDeviation}`;\n        break;\n\n      default:\n        optionalParameters = '';\n    }\n\n    response = await fetch(`https://www.alphavantage.co/query?function=${backtest.indicator}&symbol=${current_symbol}&interval=daily&time_period=${paperAPICall.timePeriod}&series_type=${paperAPICall.seriesType}${optionalParameters}&apikey=CQ5JZQYM4DG0OODA`);\n    stockIndicatorData = await response.json();\n    backtest.didRun = true; // Catches MAX API\n\n    if (stockIndicatorData.Note) {\n      alert(\"MAX API CALLS. Please wait a minute for more. Thank you for visitng my project! However, it was built using Alpha Vantage's standard API where the call frequency is 5 calls per minute and 500 calls per day.\");\n      backtest.didRun = false;\n      return;\n    } // Initalize bags/candle-count/currentBalance\n\n\n    let candleCount = 0;\n    let bagList = {};\n    bagList.length = 0;\n    let currentBalance = pairSettings.initalBalance;\n    let startDateReached = false; // Initalize single integer to know lowest price I consider selling at(updated when new bags are added)\n\n    let lowestSellPrice = 0; // Main loop that runs the paper trading bot algo, maintains bags/buys/sells/etc throughout 5 years (1265 trading days)\n    // Note: in the following for loop: key == date\n\n    for (let [key] of Object.entries(stockIndicatorData[`Technical Analysis: ${backtest.indicator}`]).reverse()) {\n      // Enables iterator code to run once start date reached/passed\n      if (key >= startDate) {\n        startDateReached = true;\n      } // Skips iterator because start date not reached\n\n\n      if (startDateReached === false) {\n        continue;\n      } else if (key === endDate) {\n        // End date reached... so stop iterating.\n        break;\n      } // Count Candles interated over\n\n\n      candleCount++; // Skip days where no price exists\n\n      if (!stockPriceData[\"Time Series (Daily)\"][`${key}`]) continue; // Essential values for iterating stock data\n\n      let curIndicatorValue = +stockIndicatorData[`Technical Analysis: ${backtest.indicator}`][`${key}`][`${getIndicatorJSON()}`];\n      let curStockPrice = +stockPriceData[\"Time Series (Daily)\"][`${key}`][`${paperAPICall.seriesType}`]; // First price of start date\n\n      if (!backtest.startPrice) {\n        backtest.startPrice = curStockPrice;\n      } // Maintain oldest price\n\n\n      backtest.endPrice = curStockPrice; // Prospective USD to create a new bag\n\n      const newBagVolume = calcInitalBuy(pairSettings.initalBuyType, pairSettings.initalBuyAmount, currentBalance, curStockPrice); // If Buy condition: Bags open, balance sufficient, price meets indicator limit\n\n      if (bagList.length < pairSettings.maxBags && newBagVolume <= currentBalance && isBuyConditionMet(pairSettings.buyStrategyValue, curStockPrice, curIndicatorValue)) {\n        // Create and add bag to bagList, increment bagList.length. Automatically added by creating key.\n        bagList.length++;\n        console.log(\"bag added\", bagList);\n        bagList[`${key}`] = {\n          \"sell-price-limit\": +(1 + pairSettings.sellStrategyValue / 100) * curStockPrice,\n          \"buy-price\": +curStockPrice,\n          \"candle-count-buy\": +candleCount,\n          \"volume-USD\": +newBagVolume,\n          \"num-shares\": +newBagVolume / curStockPrice,\n          \"indicator-at-buy\": curIndicatorValue\n        }; // Update currentBalance\n\n        currentBalance -= bagList[`${key}`][\"volume-USD\"]; // Update lowestSellPrice, min of current lowest, or new buy price is lower. Initialize if only 1 bag.\n\n        if (bagList.length === 1) {\n          lowestSellPrice = +bagList[`${key}`][\"sell-price-limit\"];\n        } else {\n          lowestSellPrice = Math.min(lowestSellPrice, bagList[`${key}`][\"sell-price-limit\"]);\n        } // Else If Sell Condition\n\n      } else if (curStockPrice >= lowestSellPrice && bagList.length > 0) {\n        // Store key of buy date(below loop has new key in smaller scope)\n        let sellDate = key;\n\n        for (let [key] of Object.entries(bagList)) {\n          if (curStockPrice >= bagList[`${key}`][\"sell-price-limit\"]) {\n            // Finalize Trade function records trade data into backtest to display in JSX below\n            finalizeTrade(bagList[`${key}`], key, sellDate, candleCount, curStockPrice, curIndicatorValue, bagList[`${key}`][\"num-shares\"], bagList[`${key}`][\"indicator-at-buy\"]);\n            delete bagList[`${key}`];\n            bagList.length--;\n          }\n        } // If bags exist, update to new lowest price\n\n\n        const newBagListKeys = Object.entries(bagList);\n\n        if (newBagListKeys[0][1] > 0) {\n          lowestSellPrice = bagList[newBagListKeys[1][0]][\"sell-price-limit\"];\n\n          for (let [key] of newBagListKeys) {\n            lowestSellPrice = Math.min(lowestSellPrice, +bagList[`${key}`][\"sell-price-limit\"]);\n          }\n        }\n      } // End of Buy/Sell conditions\n\n    } //console.log(\"iterating done\", backtest, startDate, endDate, backtest.holdReturn);\n    // Iterating complete, finalize some data on compelted backtest algorithm\n\n\n    backtest.holdReturn = ((backtest.endPrice / backtest.startPrice - 1) * 100).toFixed(2); //console.log(\"set holdret\", backtest.holdReturn, \"end/start\", backtest.endPrice, backtest.startPrice);\n\n    delete backtest.startPrice;\n    backtest.profitPercentOnBalance = backtest.profitUSD / pairSettings.initalBalance;\n    backtest.profitPercentOnTrades = backtest.profitUSD / (backtest.netSellVolume - backtest.profitUSD);\n    backtest.avgBars = backtest.netBars / backtest.numTrades; // Update results display and sends tradeListData to TradeList.js in JSX below\n\n    setTradeListData(backtest.tradeListData);\n  } // Turns JSX input type to date\n\n\n  const onFocus = e => {\n    e.currentTarget.type = \"date\";\n  };\n\n  const onSubmit = () => {\n    backtest.current_symbol = current_symbol;\n    const paperAPICall = {\n      // Relavent variables that are global: current_symbol, interval(daily), backtest.indicator(ex, RSI)\n      seriesType: seriesType,\n      timePeriod: +timePeriod,\n      stdDeviation: +stdDeviation\n    }; // Trivial value, set to 2\n\n    if (paperAPICall.timePeriod === 1) {\n      paperAPICall.timePeriod = 2;\n    }\n\n    const pairSettings = {\n      maxBags: +maxBags,\n      initalBalance: +initalBalance,\n      initalBuyType: initalBuyType,\n      initalBuyAmount: +initalBuyAmount,\n      buyStrategyValue: +buyStrategyValue,\n      buyStrategyType,\n      // used for Bollinger upper/middle/lower\n      sellStrategyValue: +sellStrategyValue\n    }; // Ensure no trivial strategies are submitted\n\n    if (pairSettings.maxBags < 1 || pairSettings.initalBalance < 1 || pairSettings.initalBuyAmount < 1 || pairSettings.sellStrategyValue < 0 || paperAPICall.timePeriod < 1) {\n      // Bags, balance, timeperiod, buy amount, sell gain% must be positive\n      alert(\"Please enter valid inputs. Use positive integers for the following: Max bags, Sell percentage, Time period, Buy amount, Inital Balance.\");\n    } else if (pairSettings.initalBuyType === 'percent' && (pairSettings.initalBuyAmount < 1 || pairSettings.initalBuyAmount > 100)) {\n      // if(buy type is percent) buy amount must be (0-100]\n      alert(\"Buy amount percentage must be 1-100%\");\n    } else if (pairSettings.initalBuyAmount > pairSettings.initalBalance) {\n      // inital buy must be < inital balance\n      alert(\"Inital buys must be less than or equal to inital balance.\");\n    } else if (backtest.indicator === 'RSI' && (pairSettings.buyStrategyValue < 1 || pairSettings.buyStrategyValue > 99)) {\n      // Ensure no trivial strategy specific settings are submitted <connect to previous if chain thing>\n      alert(\"RSI values must be between 1-99\");\n    } else if (backtest.indicator === 'BBANDS' && paperAPICall.stdDeviation < 0.5) {\n      // Ensure no trivial BB std deviation\n      alert(\"Standard Deviation must be greater than or equal to 0.5.\");\n    } else {\n      // Calculation inputs valid\n      //console.log(pairSettings);\n      // Initialize Trade List Data(for final results)\n      backtest.tradeListData = [];\n      backtest.profitUSD = 0;\n      backtest.numTrades = 0;\n      backtest.netBars = 0;\n      backtest.netSellVolume = 0; // Net volume USD sold\n      // Run backtest algorithm\n\n      runBacktests(paperAPICall, pairSettings);\n    }\n  };\n\n  let indicatorSettingDOM = null;\n\n  switch (backtest.indicator) {\n    case 'RSI':\n      indicatorSettingDOM = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          \"data-tooltip\": \"Number of prior days technical indicator is calculated from.\",\n          children: \"Time Period (days):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-flex\",\n          placeholder: \"14\",\n          onChange: e => setTimePeriod(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n      break;\n\n    case 'EMA':\n      indicatorSettingDOM = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          \"data-tooltip\": \"Number of prior days technical indicator is calculated from.\",\n          children: \"Time Period (days): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-flex\",\n          placeholder: \"9\",\n          onChange: e => setTimePeriod(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n      break;\n\n    case 'SMA':\n      indicatorSettingDOM = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          \"data-tooltip\": \"Number of prior days technical indicator is calculated from.\",\n          children: \"Time Period (days):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-flex\",\n          placeholder: \"9\",\n          onChange: e => setTimePeriod(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n      break;\n\n    case 'BBANDS':\n      indicatorSettingDOM = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          \"data-tooltip\": \"Number of prior days technical indicator is calculated from.\",\n          children: \"Time Period (days): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-flex\",\n          placeholder: \"20\",\n          onChange: e => setTimePeriod(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          \"data-tooltip\": \"Standard devation for calculating upper and lower bollinger bands.\",\n          children: \"Standard Deviation for upper/lower lines:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-flex\",\n          placeholder: \"2\",\n          onChange: e => setStdDeviation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n      break;\n\n    default:\n      indicatorSettingDOM = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Default backtest indicator DOM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 30\n      }, this);\n  }\n\n  let buyStrategyDOM = null;\n\n  switch (backtest.indicator) {\n    case 'RSI':\n      buyStrategyDOM = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          \"data-tooltip\": \"Open a position on stock for this condition.\",\n          children: \"Buy when RSI less than\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-inline\",\n          placeholder: \"30\",\n          onChange: e => setBuyStrategyValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n      break;\n\n    case 'EMA':\n      buyStrategyDOM = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          \"data-tooltip\": \"Open a position on stock for this condition.\",\n          children: \"Buy at price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-inline\",\n          placeholder: \"-3\",\n          onChange: e => setBuyStrategyValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          \"data-tooltip\": \"Open a position on stock for this condition.\",\n          children: \"% away from the EMA line. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label-sub\",\n          \"data-tooltip\": \"Positive values will open a position when the stock price is X% above the indicator value. Negative values will open a position when the stock price is X% below the indicator value.\",\n          children: \"(3 = 3% above, -3 = 3% below)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n      break;\n\n    case 'SMA':\n      buyStrategyDOM = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          \"data-tooltip\": \"Open a position on stock for this condition.\",\n          children: \"Buy at price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-inline\",\n          placeholder: \"-3\",\n          onChange: e => setBuyStrategyValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          \"data-tooltip\": \"Open a position on stock for this condition.\",\n          children: \"% away from the SMA line. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label-sub\",\n          \"data-tooltip\": \"Positive values will open a position when the stock price is X% above the indicator value. Negative values will open a position when the stock price is X% below the indicator value.\",\n          children: \"(3 = 3% above, -3 = 3% below)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n      break;\n\n    case 'BBANDS':\n      buyStrategyDOM = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          \"data-tooltip\": \"Select bollinger band the backtest will track to open and close positions.\",\n          children: \"Band to follow:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"input-select\",\n          onChange: e => setBuyStrategyType(e.target.value),\n          children: dropdownItems([{\n            name: 'Middle',\n            value: 'Real Middle Band'\n          }, {\n            name: 'Upper',\n            value: 'Real Upper Band'\n          }, {\n            name: 'Lower',\n            value: 'Real Lower Band'\n          }])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          \"data-tooltip\": \"Open a position on stock for this condition.\",\n          children: \"Buy at price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-inline\",\n          placeholder: \"-3\",\n          onChange: e => setBuyStrategyValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          \"data-tooltip\": \"Open a position on stock for this condition.\",\n          children: \"% away from the selected line. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label-sub\",\n          \"data-tooltip\": \"Positive values will open a position when the stock price is X% above the indicator value. Negative values will open a position when the stock price is X% below the indicator value.\",\n          children: \"(3 = 3% above, -3 = 3% below)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n      break;\n\n    default:\n      buyStrategyDOM = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"buy strat dom default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 25\n      }, this);\n  } // Immediately Calculates backtest results (for 'See Example' button on homepage)\n\n\n  if (backtest.immediatelyCalculate) {\n    onSubmit();\n    backtest.immediatelyCalculate = false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(CSS, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        \"data-tooltip\": \"Settings for calculating technical indicator.\",\n        children: [backtest.indicator, \" Settings\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        \"data-tooltip\": \"Indicator calculated from open, high, low, or closing prices for each period.\",\n        children: \"Select Series Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"input-select\",\n        onChange: e => setSeriesType(e.target.value),\n        children: dropdownItems([{\n          name: 'open',\n          value: '1. open'\n        }, {\n          name: 'close',\n          value: '4. close'\n        }, {\n          name: 'high',\n          value: '2. high'\n        }, {\n          name: 'low',\n          value: '3. low'\n        }])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 9\n      }, this), indicatorSettingDOM, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 906,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        \"data-tooltip\": \"Settings for calculating buy/sell conditions.\",\n        children: \"Trading Strategy Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        \"data-tooltip\": \"Date for the backtest to begin. Leave blank for earliest date.\",\n        children: \"Start Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 911,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-flex\",\n        type: \"text\",\n        placeholder: \"IPO date (earliest)\",\n        onFocus: e => onFocus(e),\n        onChange: e => setStartDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        \"data-tooltip\": \"Date for the backtest to end. Leave blank for today's date.\",\n        children: \"End Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 916,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-flex\",\n        type: \"text\",\n        placeholder: formatDate(getTodayDate()),\n        onFocus: e => onFocus(e),\n        onChange: e => setEndDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        \"data-tooltip\": \"Max number of positions to have at a given time. Algorithm will not add new positions that would exceed this value.\",\n        children: \"Max number of positions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-flex\",\n        placeholder: \"15\",\n        onChange: e => setMaxBags(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        \"data-tooltip\": \"Inital balance for backtest algorithm to start trading with.\",\n        children: \"Inital balance (USD):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-flex\",\n        min: \"0\",\n        placeholder: \"3000\",\n        onChange: e => setInitialBalance(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        \"data-tooltip\": \"Volume of new positions will be opened in reference to this type of value.\",\n        children: \"Inital buy type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"input-select\",\n        onChange: e => setInitalBuyType(e.target.value),\n        children: dropdownItems([{\n          name: '($) USD',\n          value: 'usd'\n        }, {\n          name: '(%) Percent of Balance',\n          value: 'percent'\n        }, {\n          name: '(#) Number of Stocks',\n          value: 'numStocks'\n        }])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 929,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        \"data-tooltip\": \"Value for new positions to begin with.\",\n        children: \"Inital buy amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-flex\",\n        min: \"0\",\n        placeholder: \"100\",\n        onChange: e => setInitalBuyAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 938,\n        columnNumber: 9\n      }, this), buyStrategyDOM, /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        \"data-tooltip\": \"Close positions when profit meets or exceeds this value.\",\n        children: \"Sell position at\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 943,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-inline\",\n        placeholder: \"1\",\n        onChange: e => setSellStrategyValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 944,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        \"data-tooltip\": \"Close positions when profit meets or exceeds this value.\",\n        children: \"% profit.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"calc-button\",\n        onClick: () => onSubmit(),\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"del-button\",\n        onClick: () => deleteBacktest(backtest.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 890,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-overview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        \"data-tooltip\": \"Results of backtest.\",\n        children: [\"Performance Overview \", backtest.current_symbol ? \"(\" + backtest.current_symbol + \")\" : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"result-title\",\n          \"data-tooltip\": \"Total profit of backtest in USD.\",\n          children: \"Profit USD:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 960,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"result-output\",\n          children: [\"$\", (backtest.profitUSD ? backtest.profitUSD : 0).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"result-title\",\n          \"data-tooltip\": \"Total profit of backtest in percent.\",\n          children: \"Profit Percent on Entire Balance: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 964,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"result-output\",\n          children: [(backtest.profitPercentOnBalance ? 100 * backtest.profitPercentOnBalance : 0).toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 965,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"result-title\",\n          \"data-tooltip\": \"Average profit of trades from running backtest.\",\n          children: \"Average profit per trade: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"result-output\",\n          children: [\" \", (backtest.profitPercentOnTrades ? 100 * backtest.profitPercentOnTrades : 0).toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"result-title\",\n          \"data-tooltip\": \"Number of trades made by backtest.\",\n          children: \"Number of trades: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"result-output\",\n          children: backtest.numTrades ? backtest.numTrades : 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 971,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"result-title\",\n          \"data-tooltip\": \"Average number of candles/days between opening and closing each position.\",\n          children: \"Average bars per trade: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"result-output\",\n          children: (backtest.avgBars ? backtest.avgBars : 0).toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"result-title\",\n          \"data-tooltip\": \"Return if inital balance had been fully invested at the start date and cashed out at the end date. (instead of running algorithm)\",\n          children: \"Buy and hold return: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"result-output\",\n          children: [backtest.holdReturn > 0 ? \"+\" : \"\", backtest.holdReturn ? backtest.holdReturn : \"0\", \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"conclusion-title\",\n          children: \"Backtest Conclusion: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 984,\n          columnNumber: 11\n        }, this), backtest.didRun ? backtest.profitPercentOnBalance > backtest.holdReturn ? /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"backtest-won\",\n          children: [\" This algorithm is more profitable than buy and holding \", backtest.current_symbol, \". \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 987,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"backtest-lost\",\n          children: [\" Buy and holding \", backtest.current_symbol, \" is more profitable than this algorithm. \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 989,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"backtest-null\",\n          children: \"No trades made\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 983,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-of-trades\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        \"data-tooltip\": \"History of positions opened/closed by backtest.\",\n        children: \"List Of Trades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trades-scroll\",\n        children: /*#__PURE__*/_jsxDEV(TradeList, {\n          tradeList: tradeListData.map(tradeData => tradeData)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1002,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1001,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 999,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 889,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Backtest, \"T+JPocTR1n6nX5CzPdn7uEQlbrA=\");\n\n_c2 = Backtest;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CSS\");\n$RefreshReg$(_c2, \"Backtest\");","map":{"version":3,"names":["React","useState","useContext","styled","TradeList","GlobalContext","CSS","div","Backtest","backtest","defaultTimePeriod","indicator","defaultBuyStrat","getTodayDate","Date","toISOString","slice","getOldDate","myDate","setFullYear","getFullYear","formatDate","uglyDate","array","toString","split","push","shift","join","tradeListData","setTradeListData","seriesType","setSeriesType","timePeriod","setTimePeriod","stdDeviation","setStdDeviation","startDate","setStartDate","endDate","setEndDate","maxBags","setMaxBags","initalBalance","setInitialBalance","initalBuyType","setInitalBuyType","initalBuyAmount","setInitalBuyAmount","buyStrategyValue","setBuyStrategyValue","buyStrategyType","setBuyStrategyType","sellStrategyValue","setSellStrategyValue","deleteBacktest","current_symbol","cache_TSDA","cache_TSDA_function","dropdownItems","items","map","item","value","name","calcInitalBuy","buyType","buyAmount","currentBalance","curStockPrice","isBuyConditionMet","curIndicatorValue","console","log","getIndicatorJSON","finalizeTrade","myBag","buyDate","sellDate","candleCountSell","sellPrice","numShares","percentChange","profitUSD","candleLength","buyPrice","profitPercent","indicatorAtSell","indicatorAtBuy","numTrades","netBars","netSellVolume","runBacktests","paperAPICall","pairSettings","stockPriceData","stockIndicatorData","response","alert","fetch","json","Note","optionalParameters","didRun","candleCount","bagList","length","startDateReached","lowestSellPrice","key","Object","entries","reverse","startPrice","endPrice","newBagVolume","Math","min","newBagListKeys","holdReturn","toFixed","profitPercentOnBalance","profitPercentOnTrades","avgBars","onFocus","e","currentTarget","type","onSubmit","indicatorSettingDOM","target","buyStrategyDOM","immediatelyCalculate","id","tradeData"],"sources":["/Users/JohnD/Desktop/tradingview/src/components/Backtest.js"],"sourcesContent":["import React, {useState, useContext} from 'react';\nimport styled from \"styled-components\";\nimport TradeList from './TradeList';\n\nimport { GlobalContext } from '../context/GlobalState';\n//import { pairs } from 'd3';\n\nconst CSS = styled.div`\n  background: #3d3d4a;\n  color: #898996;\n  display:flex;\n\n  padding: 1%;\n  margin: 0% 0% 1% 0%;\n\n  .settings{\n    font-size: 16px;\n    padding: 1%;\n    width: 25%;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\n  }\n  .results-overview{\n    padding: 1%;\n    width: 24%;\n    font-size: 16px;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\n    margin: 0% 1%;\n  }\n  .list-of-trades{\n    padding:1%;\n    width: 50%;\n    font-size: 16px;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\n\n  }\n\n\n  h4{\n    font-size: 180%;\n    border-bottom: 4px solid #898996;\n  }\n\n\n\n  /* left card CSS begin */\n  .input-flex{\n    display:flex;\n    border: none;\n    border-bottom: 2px solid #6464a3;\n    background: transparent;//#eff1f2;\n    color: #dedfe4;\n    width: 75%;\n    height: 2rem;\n    font-size: 16px;\n    padding-left: 0.5rem;\n    padding-top: 0.325rem;\n    padding-bottom: 0.325rem;\n    margin-bottom: 0.425rem;\n    \n    &:focus, &:hover{\n      outline: none;\n      color: #373641;\n      ::placeholder{\n        color: #a5a5b0;\n      }\n      background: #dedfe4;\n    }\n    ::placeholder{\n      color: #dedfe4;\n    }\n  }\n\n  .input-inline{\n    display:inline;\n    border: none;\n    border-bottom: 2px solid #6464a3;\n    background: transparent;//#eff1f2;\n    color: #dedfe4;\n    width:10%;\n    height: 2rem;\n    font-size: 16px;\n    padding-left: 0.5rem;\n    padding-top: 0.325rem;\n    padding-bottom: 0.325rem;\n    margin-bottom: 0.425rem;\n    \n    &:focus, &:hover{\n      outline: none;\n      color: #373641;\n      ::placeholder{\n        color: #a5a5b0;\n      }\n      background: #dedfe4;\n    }\n    ::placeholder{\n      color: #dedfe4;\n    }\n  }\n\n  .input-label{\n    color: #898996;\n    font-size: 14px;\n  }\n\n  .input-label-sub{\n    color: #898996;\n    font-style: italic;\n    font-size: 80%;\n    padding-left: 5%;\n    margin-bottom: 2%;\n  }\n\n  .input-select {\n    display:flex;\n    width: 75%;\n    color: #dedfe4;\n    border: none;\n    border-bottom: 2px solid #6464a3;\n    background: transparent;\n    height: 2rem;\n    font-size: 16px;\n    padding-left: 0.5rem;\n    margin-bottom: 0.425rem;\n\n    &:focus, &:hover{\n      outline: none;\n      color: #373641;\n      background: #dedfe4;\n    }\n  }\n\n\n  .calc-button {\n    display: block;\n    cursor: pointer;\n    outline: none;\n    border: none;\n    background-color: #dedfe4;\n    width: 200px;\n    height: 35px;\n    border-radius: 30px;\n    font-size: 18px;\n    font-weight: 600;\n    color: #373641;\n    background-size: 100% 100%;\n    box-shadow: 0 0 0 1px black inset;\n    margin: 1%;\n    margin-top: 3%;\n\n    @media only screen and (max-width: 968px) {\n      width: auto;\n    }\n  }\n  \n  .calc-button:hover {\n    background-image: linear-gradient(\n      145deg,\n      transparent 10%,\n      #89d47f 10% 20%,\n      transparent 20% 30%,\n      #89d47f 30% 40%,\n      transparent 40% 50%,\n      #89d47f 50% 60%,\n      transparent 60% 70%,\n      #89d47f 70% 80%,\n      transparent 80% 90%,\n      #89d47f 90% 100%\n    );\n    animation: background 6s linear infinite;\n\n\n    @media only screen and (max-width: 968px) {\n      width: auto;\n      color: #52515c;\n      background-color: #ebebeb;\n      background-image: none;\n    }\n  }\n\n  .del-button {\n    display: block;\n    cursor: pointer;\n    outline: none;\n    border: none;\n    background-color: #dedfe4;\n    width: 200px;\n    height: 35px;\n    border-radius: 30px;\n    font-size: 18px;\n    font-weight: 600;\n    color: #373641;\n    background-size: 100% 100%;\n    box-shadow: 0 0 0 1px black inset;\n    margin: 1%;\n    \n    margin-top: 3%;@media only screen and (max-width: 968px) {\n      width: auto;\n    }\n  }\n  \n  .del-button:hover {\n    background-image: linear-gradient(\n      145deg,\n      transparent 10%,\n      #d4847f 10% 20%,\n      transparent 20% 30%,\n      #d4847f 30% 40%,\n      transparent 40% 50%,\n      #d4847f 50% 60%,\n      transparent 60% 70%,\n      #d4847f 70% 80%,\n      transparent 80% 90%,\n      #d4847f 90% 100%\n    );\n    animation: background 6s linear infinite;\n    @media only screen and (max-width: 968px) {\n      width: auto;\n      color: #52515c;\n      background-color: #ebebeb;\n      background-image: none;\n    }\n  }\n  \n  @keyframes background {\n    0% {\n      background-position: 0 0;\n    }\n    100% {\n      background-position: 400px 0;\n    }\n  }\n  /* left card CSS end */\n  /* middle card CSS begin */\n  .result-item{\n    border-bottom: 2px solid #6464a3;\n    height: auto;\n    margin-bottom: 4%;\n    padding-bottom: 1%;\n  }\n  .result-title{\n    text-align: left;\n    color: #898996;\n    font-size: 14px;\n    width: 50%;\n  }\n  .result-output{\n    text-align: right;\n    color: #dedfe4;\n    font-size: 16px;\n    width: 50%;\n  }\n\n  .conclusion-title{\n    text-align: left;\n    color: #898996;\n    font-size: 14px;\n    width: 35%;\n  }\n  .backtest-won{\n    text-align: right;\n    font-size: 16px;\n    width: 65%;\n\n    color: #81dfc4;\n  }\n\n  .backtest-lost{\n    text-align: right;\n    font-size: 16px;\n    width: 65%;\n\n    color: #d75b6d;\n  }\n\n  .backtest-null{\n    text-align: right;\n    font-size: 16px;\n    width: 65%;\n\n    color: #dedfe4;\n  }\n  /* middle card CSS end */\n  /* right card CSS begin */\n  .trades-scroll{\n    font-size: 12px;\n    background-color: #373641;\n    padding: 1% 3%;\n    width:auto;\n    overflow-y:auto;\n    overflow-x:clip;\n    height: 750px;\n  }\n\n  /* right card CSS end */\n\n  /* Tooltip begin */\n  [data-tooltip] {\n    position: relative;\n    z-index: 10;\n  }\n\n  /* Positioning and visibility settings of the tooltip */\n  [data-tooltip]:before,\n  [data-tooltip]:after {\n    position: absolute;\n    visibility: hidden;\n    opacity: 0;\n    left: 50%;\n    bottom: calc(100% + 5px); /* 5px is the size of the arrow */\n    pointer-events: none;\n    transition: 0.2s;\n    will-change: transform;\n  }\n\n  /* The actual tooltip with a dynamic width */\n  [data-tooltip]:before {\n    content: attr(data-tooltip);\n    padding: 10px 18px;\n    min-width: 50px;\n    max-width: 300px;\n    width: max-content;\n    width: -moz-max-content;\n    border-radius: 6px;\n    font-size: 14px;\n    background-color: rgba(59, 72, 80, 0.9);\n    background-image: linear-gradient(30deg,\n      rgba(59, 72, 80, 0.44),\n      rgba(59, 68, 75, 0.44),\n      rgba(60, 82, 88, 0.44));\n    box-shadow: 0px 0px 24px rgba(0, 0, 0, 0.2);\n    color: #fff;\n    text-align: center;\n    white-space: pre-wrap;\n    transform: translate(-50%, -5px) scale(0.5);\n  }\n\n  /* Tooltip arrow */\n  [data-tooltip]:after {\n    content: '';\n    border-style: solid;\n    border-width: 5px 5px 0px 5px; /* CSS triangle */\n    border-color: rgba(55, 64, 70, 0.9) transparent transparent transparent;\n    transition-duration: 0s; /* If the mouse leaves the element, \n                                the transition effects for the \n                                tooltip arrow are \"turned off\" */\n    transform-origin: top;   /* Orientation setting for the\n                                slide-down effect */\n    transform: translateX(-50%) scaleY(0);\n  }\n\n  /* Tooltip becomes visible at hover */\n  [data-tooltip]:hover:before,\n  [data-tooltip]:hover:after {\n    visibility: visible;\n    opacity: 1;\n  }\n  /* Scales from 0.5 to 1 -> grow effect */\n  [data-tooltip]:hover:before {\n    transition-delay: 0.3s;\n    transform: translate(-50%, -5px) scale(1);\n  }\n  /* \n    Arrow slide down effect only on mouseenter (NOT on mouseleave)\n  */\n  [data-tooltip]:hover:after {\n    transition-delay: 0.5s; /* Starting after the grow effect */\n    transition-duration: 0.2s;\n    transform: translateX(-50%) scaleY(1);\n  }\n\n  /* LEFT */\n  /* Tooltip + arrow */\n  [data-tooltip-location=\"left\"]:before,\n  [data-tooltip-location=\"left\"]:after {\n    left: auto;\n    right: calc(100% + 5px);\n    bottom: 50%;\n  }\n\n  /* Tooltip */\n  [data-tooltip-location=\"left\"]:before {\n    transform: translate(-5px, 50%) scale(0.5);\n  }\n  [data-tooltip-location=\"left\"]:hover:before {\n    transform: translate(-5px, 50%) scale(1);\n  }\n\n  /* Arrow */\n  [data-tooltip-location=\"left\"]:after {\n    border-width: 5px 0px 5px 5px;\n    border-color: transparent transparent transparent rgba(55, 64, 70, 0.9);\n    transform-origin: left;\n    transform: translateY(50%) scaleX(0);\n  }\n  [data-tooltip-location=\"left\"]:hover:after {\n    transform: translateY(50%) scaleX(1);\n  }\n\n\n\n  /* RIGHT */\n  [data-tooltip-location=\"right\"]:before,\n  [data-tooltip-location=\"right\"]:after {\n    left: calc(100% + 5px);\n    bottom: 50%;\n  }\n\n  [data-tooltip-location=\"right\"]:before {\n    transform: translate(5px, 50%) scale(0.5);\n  }\n  [data-tooltip-location=\"right\"]:hover:before {\n    transform: translate(5px, 50%) scale(1);\n  }\n\n  [data-tooltip-location=\"right\"]:after {\n    border-width: 5px 5px 5px 0px;\n    border-color: transparent rgba(55, 64, 70, 0.9) transparent transparent;\n    transform-origin: right;\n    transform: translateY(50%) scaleX(0);\n  }\n  [data-tooltip-location=\"right\"]:hover:after {\n    transform: translateY(50%) scaleX(1);\n  }\n\n\n\n  /* BOTTOM */\n  [data-tooltip-location=\"bottom\"]:before,\n  [data-tooltip-location=\"bottom\"]:after {\n    top: calc(100% + 5px);\n    bottom: auto;\n  }\n\n  [data-tooltip-location=\"bottom\"]:before {\n    transform: translate(-50%, 5px) scale(0.5);\n  }\n  [data-tooltip-location=\"bottom\"]:hover:before {\n    transform: translate(-50%, 5px) scale(1);\n  }\n\n  [data-tooltip-location=\"bottom\"]:after {\n    border-width: 0px 5px 5px 5px;\n    border-color: transparent transparent rgba(55, 64, 70, 0.9) transparent;\n    transform-origin: bottom;\n  }\n\n  /* End of tooltips */\n\n`;\n\nexport const Backtest = ({ backtest }) => {\n\n  const defaultTimePeriod = () => {\n    switch(backtest.indicator){\n      case 'RSI': return 14;\n      case 'EMA': return 9;\n      case 'SMA': return 9;\n      case 'BB': return 20;\n      default: return 24;\n    }\n  }\n  const defaultBuyStrat = () => {\n    switch(backtest.indicator){\n      case 'RSI': return 30;\n      case 'EMA': return -3;\n      case 'SMA': return -3;\n      case 'BB': return -3;\n      default: return -3;\n    }\n  }\n\n  // Returns today date in YYYY-MM-DD formate\n  const getTodayDate = () => {\n    return new Date().toISOString().slice(0, 10);\n  }\n\n  // Returns 100 years ago today date in YYYY-MM-DD formate\n  const getOldDate = () => {\n    let myDate = new Date(new Date().setFullYear(new Date().getFullYear() - 100));\n    return myDate.toISOString().slice(0, 10);\n  }\n  \n  // Converts YYYY-MM-DD to DD/MM/YYYY\n  const formatDate = uglyDate => {\n    var array = (uglyDate || '').toString().split(/-/g);\n    array.push(array.shift());\n    return array.join('/') || null;\n  }\n\n  const [tradeListData, setTradeListData] = useState([]);\n\n  const [seriesType, setSeriesType] = useState('1. open');\n  const [timePeriod, setTimePeriod] = useState(defaultTimePeriod());\n  const [stdDeviation, setStdDeviation] = useState(2);\n  const [startDate, setStartDate] = useState(getOldDate());\n  const [endDate, setEndDate] = useState(getTodayDate());\n\n  const [maxBags, setMaxBags] = useState(15);\n  const [initalBalance, setInitialBalance] = useState(3000);\n  const [initalBuyType, setInitalBuyType] = useState('usd');\n  const [initalBuyAmount, setInitalBuyAmount] = useState(100);\n  const [buyStrategyValue, setBuyStrategyValue] = useState(defaultBuyStrat());\n  const [buyStrategyType, setBuyStrategyType] = useState('Real Middle Band'); // Used for Bollinger upper/middle/lower\n  const [sellStrategyValue, setSellStrategyValue] = useState(1);\n\n  const { deleteBacktest, current_symbol, cache_TSDA, cache_TSDA_function } = useContext(GlobalContext);\n\n  // Used for JSX dropdown items\n  const dropdownItems = (items) => {\n    return items.map(item => <option value={item.value} key={item.name}>{item.name}</option>);\n  }\n\n  // Calculates USD value for creating a bag\n  function calcInitalBuy(buyType, buyAmount, currentBalance, curStockPrice) {\n    switch(buyType){\n      case \"numStocks\":\n        return curStockPrice*buyAmount;\n      case \"percent\":\n        return currentBalance * (buyAmount/100.00);\n      default:\n        // case \"usd\":\n        return buyAmount;\n\n    }\n  }\n\n  // Function to return true/false for buy condition, given price and indicator values\n  function isBuyConditionMet(buyStrategyValue, curStockPrice, curIndicatorValue) {\n    switch(backtest.indicator){\n      case \"RSI\":\n        return curIndicatorValue < buyStrategyValue;\n      default:\n        // case EMA, SMA, BB (all cases where indicator is a price of stock)\n        console.log(`price is ${curStockPrice}, indicator is ${curIndicatorValue}, buy Price`, (curIndicatorValue * ((100.0 + buyStrategyValue)/100.0)), curStockPrice <= (curIndicatorValue * ((100.0 + buyStrategyValue)/100.0)));\n\n        return curStockPrice <= (curIndicatorValue * ((100.0 + buyStrategyValue)/100.0));\n    }\n  }\n\n  // Returns JSON name of element for indicator item\n  function getIndicatorJSON() {\n    switch(backtest.indicator){\n      case \"BBANDS\":\n        return buyStrategyType;\n      default:\n        return backtest.indicator;\n\n    }\n  }\n\n  // Finalizes trade, storing buy/sell data into backtest.tradeListData\n  function finalizeTrade(myBag, buyDate, sellDate, candleCountSell, sellPrice, curIndicatorValue, numShares) {\n    const percentChange = (sellPrice/myBag[\"buy-price\"]);\n    const profitUSD = +(percentChange-1)*myBag[\"volume-USD\"];\n    const candleLength = +candleCountSell-myBag[\"candle-count-buy\"];\n    \n    // Push on individual trade data\n    (backtest.tradeListData).push({\n      buyDate,\n      sellDate,\n      buyPrice: myBag[\"buy-price\"],\n      sellPrice,\n      numShares,\n      profitPercent: +percentChange-1,\n      profitUSD,\n      candleLength,\n      indicatorAtSell: curIndicatorValue,\n      indicatorAtBuy: myBag[\"indicator-at-buy\"]\n    });\n\n    // Update results Overview data\n    backtest.numTrades++;\n    backtest.profitUSD += profitUSD;\n    backtest.netBars += candleLength;\n    backtest.netSellVolume += sellPrice * numShares;\n\n    //console.log(\"finalizeTrade called, % change:\", percentChange, buyDate, sellDate);\n  }\n\n  // Runs user specified backtest algorithms and prepares outputs/trades to display\n  async function runBacktests(paperAPICall, pairSettings) {\n    let stockPriceData;\n    let stockIndicatorData;\n    let response;\n\n    // Ensure user has selected a stock\n    if(!current_symbol){\n      alert(\"Please select a stock to test your strategy on.\");\n      return;\n    }\n    \n    // Ensure API json for cache_TSDA exists\n    if(!cache_TSDA['Meta Data']){\n      response = await fetch(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${current_symbol}&outputsize=full&apikey=CQ5JZQYM4DG0OODA`);\n      stockPriceData = await response.json();\n      cache_TSDA_function(stockPriceData);\n\n      // Stop if MAX API\n      if(stockPriceData.Note) return;\n    }else{\n      stockPriceData = cache_TSDA;\n    }\n\n    // Make API call for stockIndicatorData\n    let optionalParameters;\n    switch(backtest.indicator){\n      case 'BBANDS':\n        optionalParameters = `&nbdevup=${pairSettings.stdDeviation}&nbdevdn=${pairSettings.stdDeviation}`;\n        break;\n      default:\n        optionalParameters = '';\n    }\n    response = await fetch(`https://www.alphavantage.co/query?function=${backtest.indicator}&symbol=${current_symbol}&interval=daily&time_period=${paperAPICall.timePeriod}&series_type=${paperAPICall.seriesType}${optionalParameters}&apikey=CQ5JZQYM4DG0OODA`);\n    stockIndicatorData = await response.json();\n    backtest.didRun = true;\n\n    // Catches MAX API\n    if(stockIndicatorData.Note){\n      alert(\"MAX API CALLS. Please wait a minute for more. Thank you for visitng my project! However, it was built using Alpha Vantage's standard API where the call frequency is 5 calls per minute and 500 calls per day.\");\n      backtest.didRun = false;\n      return;\n    }\n\n    // Initalize bags/candle-count/currentBalance\n    let candleCount = 0;\n    let bagList = {};\n    bagList.length = 0;\n    let currentBalance = pairSettings.initalBalance;\n    let startDateReached = false;\n    // Initalize single integer to know lowest price I consider selling at(updated when new bags are added)\n    let lowestSellPrice = 0;\n    // Main loop that runs the paper trading bot algo, maintains bags/buys/sells/etc throughout 5 years (1265 trading days)\n    // Note: in the following for loop: key == date\n    for(let [key] of Object.entries(stockIndicatorData[`Technical Analysis: ${backtest.indicator}`]).reverse()){\n      // Enables iterator code to run once start date reached/passed\n      if(key>=startDate){\n        startDateReached = true;\n      }\n      // Skips iterator because start date not reached\n      if(startDateReached === false){\n        continue;\n      }else if(key===endDate){\n        // End date reached... so stop iterating.\n        break;\n      }\n      // Count Candles interated over\n      candleCount++;\n      \n      // Skip days where no price exists\n      if(!stockPriceData[\"Time Series (Daily)\"][`${key}`]) continue;\n      // Essential values for iterating stock data\n      let curIndicatorValue = +stockIndicatorData[`Technical Analysis: ${backtest.indicator}`][`${key}`][`${getIndicatorJSON()}`];\n      let curStockPrice = +stockPriceData[\"Time Series (Daily)\"][`${key}`][`${paperAPICall.seriesType}`];\n\n      // First price of start date\n      if(!backtest.startPrice){\n        backtest.startPrice = curStockPrice;\n      }\n      // Maintain oldest price\n      backtest.endPrice = curStockPrice;    \n\n      // Prospective USD to create a new bag\n      const newBagVolume = calcInitalBuy(pairSettings.initalBuyType, pairSettings.initalBuyAmount, currentBalance, curStockPrice);\n\n      // If Buy condition: Bags open, balance sufficient, price meets indicator limit\n      if(bagList.length<pairSettings.maxBags && newBagVolume <= currentBalance && isBuyConditionMet(pairSettings.buyStrategyValue, curStockPrice, curIndicatorValue)){\n        // Create and add bag to bagList, increment bagList.length. Automatically added by creating key.\n        bagList.length++;\n        console.log(\"bag added\", bagList);\n        bagList[`${key}`] = {\n          \"sell-price-limit\": +(1+(pairSettings.sellStrategyValue/100)) * curStockPrice,\n          \"buy-price\": +curStockPrice,\n          \"candle-count-buy\": +candleCount,\n          \"volume-USD\": +newBagVolume,\n          \"num-shares\": +newBagVolume/curStockPrice,\n          \"indicator-at-buy\": curIndicatorValue\n        }\n\n        // Update currentBalance\n        currentBalance -= bagList[`${key}`][\"volume-USD\"];\n\n        // Update lowestSellPrice, min of current lowest, or new buy price is lower. Initialize if only 1 bag.\n        if(bagList.length===1){\n          lowestSellPrice = +bagList[`${key}`][\"sell-price-limit\"];\n        }else{\n          lowestSellPrice = Math.min(lowestSellPrice, bagList[`${key}`][\"sell-price-limit\"]);\n        }\n      // Else If Sell Condition\n      }else if(curStockPrice>= lowestSellPrice && bagList.length>0){\n        // Store key of buy date(below loop has new key in smaller scope)\n        let sellDate = key;\n        for(let [key] of Object.entries(bagList)){ \n          if(curStockPrice >= bagList[`${key}`][\"sell-price-limit\"]){\n            // Finalize Trade function records trade data into backtest to display in JSX below\n            finalizeTrade(bagList[`${key}`], key, sellDate, candleCount, curStockPrice, curIndicatorValue, bagList[`${key}`][\"num-shares\"], bagList[`${key}`][\"indicator-at-buy\"]);\n            delete bagList[`${key}`];\n            bagList.length--;\n          }\n        }\n\n        // If bags exist, update to new lowest price\n        const newBagListKeys = Object.entries(bagList);\n        if(newBagListKeys[0][1]>0){\n          lowestSellPrice = bagList[newBagListKeys[1][0]][\"sell-price-limit\"];\n          for(let [key] of newBagListKeys){ \n            lowestSellPrice = Math.min(lowestSellPrice, +bagList[`${key}`][\"sell-price-limit\"]);\n          }\n        }\n      }\n      // End of Buy/Sell conditions\n    }\n    \n    //console.log(\"iterating done\", backtest, startDate, endDate, backtest.holdReturn);\n    // Iterating complete, finalize some data on compelted backtest algorithm\n    backtest.holdReturn = (((backtest.endPrice / backtest.startPrice)-1) * 100).toFixed(2);\n    //console.log(\"set holdret\", backtest.holdReturn, \"end/start\", backtest.endPrice, backtest.startPrice);\n    delete backtest.startPrice;\n    backtest.profitPercentOnBalance = backtest.profitUSD / pairSettings.initalBalance;\n    backtest.profitPercentOnTrades = backtest.profitUSD / (backtest.netSellVolume - backtest.profitUSD);\n    backtest.avgBars = backtest.netBars / backtest.numTrades;\n    \n    // Update results display and sends tradeListData to TradeList.js in JSX below\n    setTradeListData(backtest.tradeListData);\n  }\n\n  // Turns JSX input type to date\n  const onFocus = e =>{\n    e.currentTarget.type = \"date\";\n  }\n\n  const onSubmit = () => {\n    backtest.current_symbol = current_symbol;\n\n    const paperAPICall = { \n      // Relavent variables that are global: current_symbol, interval(daily), backtest.indicator(ex, RSI)\n      seriesType: seriesType,\n      timePeriod: +timePeriod,\n      stdDeviation: +stdDeviation\n    };\n\n    // Trivial value, set to 2\n    if(paperAPICall.timePeriod===1){\n      paperAPICall.timePeriod = 2;\n    }\n\n    const pairSettings = {\n      maxBags: +maxBags,\n      initalBalance: +initalBalance,\n      initalBuyType: initalBuyType,\n      initalBuyAmount: +initalBuyAmount,\n      buyStrategyValue: +buyStrategyValue,\n      buyStrategyType, // used for Bollinger upper/middle/lower\n      sellStrategyValue: +sellStrategyValue\n    }\n\n    // Ensure no trivial strategies are submitted\n    if(pairSettings.maxBags<1 || pairSettings.initalBalance<1 || pairSettings.initalBuyAmount<1 || pairSettings.sellStrategyValue<0 || paperAPICall.timePeriod<1){\n      // Bags, balance, timeperiod, buy amount, sell gain% must be positive\n      alert(\"Please enter valid inputs. Use positive integers for the following: Max bags, Sell percentage, Time period, Buy amount, Inital Balance.\");\n    }else if(pairSettings.initalBuyType==='percent' && (pairSettings.initalBuyAmount<1 || pairSettings.initalBuyAmount>100)){\n      // if(buy type is percent) buy amount must be (0-100]\n      alert(\"Buy amount percentage must be 1-100%\");\n    }else if (pairSettings.initalBuyAmount>pairSettings.initalBalance){\n      // inital buy must be < inital balance\n      alert(\"Inital buys must be less than or equal to inital balance.\");\n    }else if(backtest.indicator==='RSI' && (pairSettings.buyStrategyValue<1 || pairSettings.buyStrategyValue>99)){\n      // Ensure no trivial strategy specific settings are submitted <connect to previous if chain thing>\n      alert(\"RSI values must be between 1-99\");\n    }else if(backtest.indicator==='BBANDS' && paperAPICall.stdDeviation<0.5){\n      // Ensure no trivial BB std deviation\n      alert(\"Standard Deviation must be greater than or equal to 0.5.\");\n    }else{\n      // Calculation inputs valid\n      //console.log(pairSettings);\n\n      // Initialize Trade List Data(for final results)\n      backtest.tradeListData = [];\n      backtest.profitUSD = 0;\n      backtest.numTrades = 0;\n      backtest.netBars = 0;\n      backtest.netSellVolume = 0; // Net volume USD sold\n\n      // Run backtest algorithm\n      runBacktests(paperAPICall, pairSettings);\n    }\n\n  }\n\n  let indicatorSettingDOM = null;\n  switch(backtest.indicator){\n    case 'RSI':\n      indicatorSettingDOM = (<> \n        {/* Time Period(# candles in calc) */}\n          <label className=\"input-label\" data-tooltip=\"Number of prior days technical indicator is calculated from.\">Time Period (days):</label>\n          <input className=\"input-flex\" placeholder='14' onChange={(e) => setTimePeriod(e.target.value)} />\n      </>);\n      break;\n    case 'EMA':\n      indicatorSettingDOM = (<> \n        {/* Time Period(# candles in calc) */}\n        <label className=\"input-label\" data-tooltip=\"Number of prior days technical indicator is calculated from.\">Time Period (days): </label>\n        <input className=\"input-flex\" placeholder=\"9\" onChange={(e) => setTimePeriod(e.target.value)} />\n      </>);\n      break;\n    case 'SMA':\n      indicatorSettingDOM = (<> \n        {/* Time Period(# candles in calc) */}\n        <label className=\"input-label\" data-tooltip=\"Number of prior days technical indicator is calculated from.\">Time Period (days):</label>\n        <input className=\"input-flex\" placeholder=\"9\" onChange={(e) => setTimePeriod(e.target.value)} />\n      </>);\n      break;\n    case 'BBANDS':\n      indicatorSettingDOM = (<> \n        {/* Time Period(# candles in calc) */}\n        <label className=\"input-label\" data-tooltip=\"Number of prior days technical indicator is calculated from.\">Time Period (days): </label>\n        <input className=\"input-flex\" placeholder=\"20\" onChange={(e) => setTimePeriod(e.target.value)} />\n\n        {/* Standard deviation for both top/bot lines */}\n        <label className=\"input-label\" data-tooltip=\"Standard devation for calculating upper and lower bollinger bands.\">Standard Deviation for upper/lower lines:</label>\n        <input className=\"input-flex\" placeholder=\"2\" onChange={(e) => setStdDeviation(e.target.value)} />\n      </>);\n      break;\n    default:\n      indicatorSettingDOM = (<div>Default backtest indicator DOM</div>);\n    \n  }\n\n  let buyStrategyDOM = null;\n  switch(backtest.indicator){\n    case 'RSI':\n      buyStrategyDOM = (<> \n        {/* Buy Strategy RSI */}\n        <label className=\"input-label\" data-tooltip=\"Open a position on stock for this condition.\">Buy when RSI less than</label>\n        <input className=\"input-inline\" placeholder='30' onChange={(e) => setBuyStrategyValue(e.target.value)} />\n        <br/>\n      </>);\n      break;\n    case 'EMA':\n      buyStrategyDOM = (<> \n        {/* Buy strategy % away */}\n        <label className=\"input-label\" data-tooltip=\"Open a position on stock for this condition.\">Buy at price</label>\n        <input className=\"input-inline\" placeholder=\"-3\" onChange={(e) => setBuyStrategyValue(e.target.value)}/>\n        <label className=\"input-label\" data-tooltip=\"Open a position on stock for this condition.\">% away from the EMA line. </label>\n        <label className=\"input-label-sub\" data-tooltip=\"Positive values will open a position when the stock price is X% above the indicator value. Negative values will open a position when the stock price is X% below the indicator value.\">(3 = 3% above, -3 = 3% below)</label>\n        <br/>\n      </>);\n      break;\n    case 'SMA':\n      buyStrategyDOM = (<> \n        {/* Buy strategy % away */}\n        <label className=\"input-label\" data-tooltip=\"Open a position on stock for this condition.\">Buy at price</label>\n        <input className=\"input-inline\" placeholder=\"-3\" onChange={(e) => setBuyStrategyValue(e.target.value)}/>\n        <label className=\"input-label\" data-tooltip=\"Open a position on stock for this condition.\">% away from the SMA line. </label>\n        <label className=\"input-label-sub\" data-tooltip=\"Positive values will open a position when the stock price is X% above the indicator value. Negative values will open a position when the stock price is X% below the indicator value.\">(3 = 3% above, -3 = 3% below)</label>\n        <br/>\n      </>);\n      break;\n    case 'BBANDS':\n      buyStrategyDOM = (<> \n        {/* Buy strategy % away (BB) */}\n        <label className=\"input-label\" data-tooltip=\"Select bollinger band the backtest will track to open and close positions.\">Band to follow:</label>\n        <select className=\"input-select\" onChange={(e) => setBuyStrategyType(e.target.value)}>\n          {dropdownItems([\n            {name:'Middle', value:'Real Middle Band'},\n            {name:'Upper', value:'Real Upper Band'},\n            {name:'Lower', value:'Real Lower Band'}\n          ])}\n        </select>\n        \n        <label className=\"input-label\" data-tooltip=\"Open a position on stock for this condition.\">Buy at price</label>\n        <input className=\"input-inline\" placeholder=\"-3\" onChange={(e) => setBuyStrategyValue(e.target.value)}/>\n        <label className=\"input-label\" data-tooltip=\"Open a position on stock for this condition.\">% away from the selected line. </label>\n        <label className=\"input-label-sub\" data-tooltip=\"Positive values will open a position when the stock price is X% above the indicator value. Negative values will open a position when the stock price is X% below the indicator value.\">(3 = 3% above, -3 = 3% below)</label>\n        <br/>\n      </>);\n      break;\n    default:\n      buyStrategyDOM = (<div>buy strat dom default</div>);\n    \n  }\n\n  // Immediately Calculates backtest results (for 'See Example' button on homepage)\n  if(backtest.immediatelyCalculate){\n    onSubmit();\n    backtest.immediatelyCalculate = false;\n  }\n\n  return (\n    <CSS>\n      <div className='settings'>\n        {/* Beginning of Settings */}\n        <h4 data-tooltip=\"Settings for calculating technical indicator.\">{backtest.indicator} Settings</h4>\n\n        {/* series type */}\n        <label className=\"input-label\" data-tooltip=\"Indicator calculated from open, high, low, or closing prices for each period.\">Select Series Type:</label>\n        <select className=\"input-select\" onChange={(e) => setSeriesType(e.target.value)}>\n          {dropdownItems([\n            {name:'open', value:'1. open'},\n            {name:'close', value:'4. close'},\n            {name:'high', value:'2. high'},\n            {name:'low', value:'3. low'}])}\n        </select>\n        \n        {indicatorSettingDOM}\n\n        <br/>\n\n        <h4 data-tooltip=\"Settings for calculating buy/sell conditions.\">Trading Strategy Settings</h4>\n\n        {/* Begin date for backtest */}\n        <label className=\"input-label\" data-tooltip=\"Date for the backtest to begin. Leave blank for earliest date.\">Start Date:</label>\n        <input className=\"input-flex\" type=\"text\" placeholder=\"IPO date (earliest)\" onFocus={(e) => onFocus(e)} onChange={(e) => setStartDate(e.target.value)}/>\n              \n\n        {/* End date for backtest */}\n        <label className=\"input-label\" data-tooltip=\"Date for the backtest to end. Leave blank for today's date.\">End Date:</label>\n        <input className=\"input-flex\" type=\"text\" placeholder={formatDate(getTodayDate())} onFocus={(e) => onFocus(e)} onChange={(e) => setEndDate(e.target.value)}/>\n              \n        {/* Max number bags */}\n        <label className=\"input-label\" data-tooltip=\"Max number of positions to have at a given time. Algorithm will not add new positions that would exceed this value.\">Max number of positions:</label>\n        <input className=\"input-flex\" placeholder=\"15\" onChange={(e) => setMaxBags(e.target.value)} />\n\n        {/* Inital balance */}\n        <label className=\"input-label\" data-tooltip=\"Inital balance for backtest algorithm to start trading with.\">Inital balance (USD):</label>\n        <input className=\"input-flex\" min=\"0\" placeholder=\"3000\" onChange={(e) => setInitialBalance(e.target.value)} />\n\n        {/* Inital buy (type/amount) */}\n        <label className=\"input-label\" data-tooltip=\"Volume of new positions will be opened in reference to this type of value.\">Inital buy type:</label>\n        <select className=\"input-select\" onChange={(e) => setInitalBuyType(e.target.value)}>\n          {dropdownItems([\n            {name:'($) USD', value:'usd'},\n            {name:'(%) Percent of Balance', value:'percent'},\n            {name:'(#) Number of Stocks', value:'numStocks'}\n          ])}\n        </select>\n\n        <label className=\"input-label\" data-tooltip=\"Value for new positions to begin with.\">Inital buy amount:</label>\n        <input className=\"input-flex\" min=\"0\" placeholder=\"100\" onChange={(e) => setInitalBuyAmount(e.target.value)} />\n\n        {buyStrategyDOM}\n\n        {/* Sell Strategy */}\n        <label className=\"input-label\" data-tooltip=\"Close positions when profit meets or exceeds this value.\">Sell position at</label>\n        <input className=\"input-inline\" placeholder=\"1\" onChange={(e) => setSellStrategyValue(e.target.value)} />\n        <label className=\"input-label\" data-tooltip=\"Close positions when profit meets or exceeds this value.\">% profit.</label>\n        <br/>\n\n        {/* submit button */}\n        <button className=\"calc-button\" onClick={() => onSubmit()}>Calculate</button>\n\n\n        {/* close button */}\n        <button className=\"del-button\" onClick={() => deleteBacktest(backtest.id)} >Delete</button>\n      </div>\n      {/* end of settings, beginning of results overview */}\n\n      <div className='results-overview'>\n        <h4 data-tooltip=\"Results of backtest.\">Performance Overview {backtest.current_symbol?\"(\"+backtest.current_symbol+\")\":\"\"}</h4>\n        <div className=\"result-item\">\n          <label className=\"result-title\" data-tooltip=\"Total profit of backtest in USD.\">Profit USD:</label>\n          <label className=\"result-output\">${(backtest.profitUSD?backtest.profitUSD:0).toFixed(2)}</label>\n        </div>\n        <div className=\"result-item\">\n          <label className=\"result-title\" data-tooltip=\"Total profit of backtest in percent.\">Profit Percent on Entire Balance: </label>\n          <label className=\"result-output\">{(backtest.profitPercentOnBalance ? 100*backtest.profitPercentOnBalance : 0).toFixed(2)}%</label>\n        </div>\n        <div className=\"result-item\">\n          <label className=\"result-title\" data-tooltip=\"Average profit of trades from running backtest.\">Average profit per trade: </label>\n          <label className=\"result-output\"> {(backtest.profitPercentOnTrades?100*backtest.profitPercentOnTrades:0).toFixed(2)}%</label>\n        </div>\n        <div className=\"result-item\">\n          <label className=\"result-title\" data-tooltip=\"Number of trades made by backtest.\">Number of trades: </label>\n          <label className=\"result-output\">{backtest.numTrades? backtest.numTrades:0}</label>\n        </div>\n        <div className=\"result-item\">\n          <label className=\"result-title\" data-tooltip=\"Average number of candles/days between opening and closing each position.\">Average bars per trade: </label>\n          <label className=\"result-output\">{(backtest.avgBars?backtest.avgBars:0).toFixed(2)}</label>\n        </div>\n        <div className=\"result-item\">\n          <label className=\"result-title\" data-tooltip=\"Return if inital balance had been fully invested at the start date and cashed out at the end date. (instead of running algorithm)\">Buy and hold return: </label>\n          <label className=\"result-output\">{backtest.holdReturn>0?\"+\":\"\"}{backtest.holdReturn?backtest.holdReturn:\"0\"}%</label>\n        </div>\n        <div className=\"result-item\">\n          <label className=\"conclusion-title\">Backtest Conclusion: </label>\n          {backtest.didRun?\n            backtest.profitPercentOnBalance>backtest.holdReturn?\n              <label className=\"backtest-won\"> This algorithm is more profitable than buy and holding {backtest.current_symbol}. </label>\n              :\n              <label className=\"backtest-lost\"> Buy and holding {backtest.current_symbol} is more profitable than this algorithm. </label>\n            :\n            <label className=\"backtest-null\">No trades made</label>\n          }\n        </div>\n          \n      </div>\n      \n      {/* End of results overview, begin list of trades */}\n\n      <div className='list-of-trades'>\n        <h4 data-tooltip=\"History of positions opened/closed by backtest.\">List Of Trades</h4>\n        <div className=\"trades-scroll\">\n          <TradeList tradeList={tradeListData.map(tradeData => tradeData)}/>\n        </div>\n      </div>\n      \n      {/* End list of trades */}\n    </CSS>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}